<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link href="https://unpkg.com/primevue@^3/resources/themes/saga-blue/theme.css" rel="stylesheet" />
    <link href="https://unpkg.com/primevue@^3/resources/primevue.min.css" rel="stylesheet" />
    <link href="https://unpkg.com/primeflex@2.0.0/primeflex.min.css" rel="stylesheet" />
    <link href="https://unpkg.com/primeicons/primeicons.css" rel="stylesheet" />
    <!-- Dependencies -->
    <script src="https://unpkg.com/vue@next"></script>
    <script src="https://unpkg.com/primevue@^3/core/core.min.js"></script>

    <!-- Demo -->
    <script src="https://unpkg.com/primevue@^3/chips/chips.min.js"></script>
    <script src="https://unpkg.com/primevue@^3/fileupload/fileupload.min.js"></script>
    <script src="https://unpkg.com/primevue@^3/toast/toast.min.js"></script>
    <script src="https://unpkg.com/primevue@^3/toastservice/toastservice.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>create Project</title>
</head>

<style>
    .p-chips , .p-chips .p-chips-multiple-container {
        width: 100%;
    }
    .p-fileupload-content .p-progressbar {
        height: 30px;
    }
    .banner-back {
            display: flex;
            flex-direction: row;
            width: 100%;
            background: #a8dadb;
            color: #212121;
            align-items: center;
            padding: 10px;
            margin-bottom: 10px;
        }

        .banner-back i {
            margin-right: 10px;
        }
        a , a:hover , a:active , a:focus{
            color: #212121;
            text-decoration: none; 
        }

        .image-controller {
            padding: 0 5px;
            width: 120px;
            height: 120px;
            position: relative;
            border-radius: 10px;
            margin-bottom: 10px;
        }

        img {
            border: none;
        }
</style>
<body>
    <div id="app">
        <p-toast></p-toast>
        <div class="container">
            <div class="row">
                <div class="col-12 py-5">
                    <div class="banner-back">
                        <a href="/admin/">
                            <i class="pi pi-arrow-left"></i>
                            <span>BACK</span>
                        </a>
                    </div>
                    <form class="mx-auto">
                        <div class="form-group">
                            <label for="title">name</label>
                            <input type="text" class="form-control" v-model="postData.name" placeholder="name example">
                        </div>
                        <div class="form-group">
                            <label for="discription">description</label>
                            <textarea class="form-control" v-model="postData.description" placeholder="description example" rows="2" cols="10"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="title">side</label>
                            <input type="text" class="form-control" v-model="postData.side" placeholder="link example">
                        </div>
                        <div class="form-group">
                            <label for="title">instagram</label>
                            <input type="text" class="form-control" v-model="postData.instagram" placeholder="insta link example">
                        </div>
                        <div class="form-group">
                            <label for="title">telegram</label>
                            <input type="text" class="form-control" v-model="postData.telegram" placeholder="tel link example">
                        </div>
                        <div class="form-group">
                            <label for="title">git hub</label>
                            <input type="text" class="form-control" v-model="postData.github" placeholder="github example">
                        </div>
                        <div class="form-group">
                            <label for="title">email</label>
                            <input type="text" class="form-control" v-model="postData.email" placeholder="email link example">
                        </div>
                        <div class="form-group">
                            <label for="discription">skills</label>
                            <p-chips v-model="postData.skills"></p-chips>
                        </div>
                        <div class="form-group flex-column">
                            <label for="images input">profile image</label>
                            <p-fileupload name="profile" url="/admin/uploadProfileImages" @select="onSelect($event.files )" :custom-upload="false"  @upload="onUpload($event.files , $event.xhr)" :multiple="false" accept="image/*"  :max-file-size="1000000">
                                <template #empty>
                                    <img class="image-controller" :src="`http://localhost/images/profile/profile.png`" >
                                    <p>your image profile</p>
                                </template>
                            </p-fileupload>
                        </div>
                        <p-button label="update" @click="onSubmit()" class="p-button-raised"></p-button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        const { createApp, ref , onMounted} = Vue;
        const { useToast } = primevue.usetoast;

        const App = {
            setup() {
                const toast = useToast();
                const validation = ref(false);
                const postData = ref({
                    name:'',
                    description:'',
                    github:'',
                });

                const data = ref()
                onMounted(() => {
                    axios.get('/admin/getUserData')
                    .then(response => {
                        console.log(response.data);
                        data.value = response.data;
                        postData.value = {
                            name:data.value.name,
                            description:data.value.description,
                            side:data.value.side,
                            instagram:data.value.instagram,
                            telegram:data.value.telegram,
                            github:data.value.github,
                            email:data.value.email,
                            skills:data.value.skills,
                        }
                    })  
                })
                const onUpload = (files , callback) => {
                    toast.add({severity: 'info', summary: 'Success', detail: 'images Uploaded', life: 3000});
                }

                const onSelect = (event) => {
                    console.log(event);
                }

                const onSubmit = () => {
                    if (!postData.value.name || !postData.value.description ||  !postData.value.github || 
                        !postData.value.side ||  !postData.value.instagram || !postData.value.telegram ||
                        !postData.value.email || !postData.value.skills ) return toast.add({severity: 'error', summary: 'error', detail: 'please complete Form', life: 3000});
                    axios.put('/admin/updateProfile' , postData.value)
                    .then(response => {
                        toast.add({severity: 'success', summary: 'susses', detail: 'created', life: 3000});
                        setTimeout(() => {
                            window.location.href = '/admin/'
                        }, 1000);
                    })
                }

                return { onUpload , onSelect , data , postData , validation  ,onSubmit}
            },
            components: {
                "p-chips": primevue.chips,
                "p-fileupload": primevue.fileupload,
                "p-toast": primevue.toast,
                "p-button": primevue.button
            }
        };

        createApp(App)
            .use(primevue.config.default, { ripple: true })
            .use(primevue.toastservice)
            .mount("#app");
        </script>
</body>
</html>